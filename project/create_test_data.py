"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ó–∞–ø—É—Å–∫: python create_test_data.py
"""
import os
import django
from users.models import User
from events.models import Event
from django.utils import timezone
from datetime import timedelta
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')
django.setup()



print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")

# –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
print("\n‚ö†Ô∏è  –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
User.objects.all().delete()
Event.objects.all().delete()

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
print("\nüë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
users_data = [
    {
        'email': 'ivan@example.com',
        'name': '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
        'password': 'password123'
    },
    {
        'email': 'maria@example.com',
        'name': '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
        'password': 'password123'
    },
    {
        'email': 'alex@example.com',
        'name': '–ê–ª–µ–∫—Å–µ–π –°–∏–¥–æ—Ä–æ–≤',
        'password': 'password123'
    },
    {
        'email': 'elena@example.com',
        'name': '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
        'password': 'password123'
    },
]

users = []
for user_data in users_data:
    user = User.objects.create_user(**user_data)
    users.append(user)
    print(f"   ‚úì –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.name} ({user.email})")

# –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
print("\nüìÖ –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π...")
events_data = [
    {
        'title': 'Python Meetup Moscow',
        'description': '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Python 3.12 –∏ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–æ–≤—ã–µ —Ñ–∏—á–∏, performance improvements –∏ breaking changes.',
        'date': timezone.now() + timedelta(days=7, hours=2),
        'organizer': users[0]
    },
    {
        'title': 'Django Workshop',
        'description': '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π workshop –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ REST API —Å Django. –ò–∑—É—á–∏–º DRF, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ deployment.',
        'date': timezone.now() + timedelta(days=14, hours=3),
        'organizer': users[0]
    },
    {
        'title': 'React + Django Integration',
        'description': '–ö–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å React —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å Django –±—ç–∫–µ–Ω–¥–æ–º. CORS, JWT, state management –∏ best practices.',
        'date': timezone.now() + timedelta(days=21, hours=4),
        'organizer': users[1]
    },
    {
        'title': 'PostgreSQL Performance Tuning',
        'description': '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ PostgreSQL –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –ò–Ω–¥–µ–∫—Å—ã, explain analyze, –ø–∞—Ä—Ç–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.',
        'date': timezone.now() + timedelta(days=28, hours=5),
        'organizer': users[2]
    },
    {
        'title': 'Docker & DevOps',
        'description': '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—é –∏ CI/CD –¥–ª—è Python –ø—Ä–æ–µ–∫—Ç–æ–≤. Docker, docker-compose, GitHub Actions.',
        'date': timezone.now() + timedelta(days=35, hours=6),
        'organizer': users[3]
    },
    {
        'title': 'Git Advanced',
        'description': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å Git. Rebase, cherry-pick, bisect, hooks –∏ workflow —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.',
        'date': timezone.now() + timedelta(days=42, hours=7),
        'organizer': users[1]
    },
]

events = []
for event_data in events_data:
    event = Event.objects.create(**event_data)
    events.append(event)
    print(f"   ‚úì –°–æ–∑–¥–∞–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: {event.title}")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
print("\n‚úçÔ∏è  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...")

# Python Meetup - –º–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
events[0].participants.add(users[1], users[2], users[3])
print(f"   ‚úì {events[0].title}: 3 —É—á–∞—Å—Ç–Ω–∏–∫–∞")

# Django Workshop
events[1].participants.add(users[1], users[3])
print(f"   ‚úì {events[1].title}: 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞")

# React + Django
events[2].participants.add(users[0], users[3])
print(f"   ‚úì {events[2].title}: 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞")

# PostgreSQL
events[3].participants.add(users[0], users[1])
print(f"   ‚úì {events[3].title}: 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞")

# Docker & DevOps - –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ
events[4].participants.add(users[0], users[1], users[2])
print(f"   ‚úì {events[4].title}: 3 —É—á–∞—Å—Ç–Ω–∏–∫–∞")

# Git Advanced
events[5].participants.add(users[2])
print(f"   ‚úì {events[5].title}: 1 —É—á–∞—Å—Ç–Ω–∏–∫")

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.count()}")
print(f"   –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: {Event.objects.count()}")
total_registrations = sum(e.participants.count() for e in Event.objects.all())
print(f"   –í—Å–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π: {total_registrations}")

print("\nüîë –¢–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
print("   " + "="*60)
for user in users:
    print(f"   Email: {user.email:25} | Password: password123")
print("   " + "="*60)

print("\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
print("\nüí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:")
print("   1. –í–æ–π–¥–∏—Ç–µ –ø–æ–¥ –ª—é–±—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ POST /api/auth/login/")
print("   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization")
print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–∏–µ")
print("\n   Admin –ø–∞–Ω–µ–ª—å: http://127.0.0.1:8000/admin/")
